# 构建配置
[build]
# 使用所有 CPU 核心进行并行编译
jobs = -1

# 网络配置
[net]
# 增加网络重试次数
retry = 10

# 目标配置
[target.wasm32-unknown-unknown]
# 插件构建优化
rustflags = ["-C", "opt-level=z"]

# Linux: 使用更快的链接器
[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=lld", "-C", "target-cpu=native"]

# macOS Intel: 优化编译
[target.x86_64-apple-darwin]
rustflags = ["-C", "target-cpu=native"]

# macOS ARM: 优化编译
[target.aarch64-apple-darwin]
rustflags = ["-C", "target-cpu=native"]

# Windows: 使用 rust-lld
[target.x86_64-pc-windows-msvc]
linker = "rust-lld.exe"

# 别名
[alias]
# 开发时的便捷命令
w = "watch -x run"
wr = "watch -x 'run --release'"
wt = "watch -x test"
wc = "watch -x check"
# CI 专用命令
ci-check = "check --profile ci"
ci-test = "test --profile ci"