name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
    
    - name: Install dependencies (Ubuntu only)
      if: matrix.platform == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev \
          build-essential \
          curl \
          wget \
          file \
          libssl-dev \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev
    
    - name: Build plugins
      run: |
        chmod +x build-plugins.sh
        ./build-plugins.sh
    
    - name: Build Tauri App
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: ${{ github.ref_name }}
        releaseName: 'Minimal Kernel v__VERSION__'
        releaseBody: |
          See the [CHANGELOG](https://github.com/hpeXt/minimal-kernel/blob/main/CHANGELOG.md) for details.
          
          ## 下载
          - **macOS**: 下载 `.dmg` 文件
          - **Windows**: 下载 `.msi` 或 `.exe` 文件  
          - **Linux**: 下载 `.deb` 或 `.AppImage` 文件
        releaseDraft: true
        prerelease: false
        args: ${{ matrix.args }}

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Rust cache
      uses: swatinem/rust-cache@v2
    
    - name: Run tests
      run: |
        cargo test --all-features
        cargo test --doc
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy -- -D warnings